[{"content":"Charles McLean | CPTS info@whitecat.dev LinkedIn Work Experience Cégep de Saint-Hyacinthe | IT Tech Support 2024-Present\nIT Technical support offered by students for students and teachers on premise at the school Management of tickets Hardware diagnosis and repairs Software debugging, help or tutoring General assistance with teacher and student projects. NovaPC | Founder 2021-2024\nCreating custom computers according to specific client needs Design and implementation of complete web solutions, including frontend and backend development Entrepreneurial leadership in creating and growing the company since its founding Bidon Taverne Culinaire | Server October 2023 - July 2024, Saint-Lambert\nHigh-quality customer service in an upscale culinary environment Cycle et Sports Castonguay | Bike Mechanic April 2021 - June 2022, April 2023 - July 2024, Saint-Lambert\nExcellence in technical diagnosis and bike repair while maintaining clear communication with customers Sales optimization through in-depth product knowledge and exemplary customer service Consistent demonstration of professionalism and maintenance of a welcoming atmosphere Education CPTS | Certified Penetration Testing Specialist June 2023 - May 2024, Online\nAdvanced pentesting certification obtained through HackTheBox Skills validation through successful completion of final exam on May 29, 2024 Cégep de Saint-Hyacinthe | DEC Computer Technology: Networks and Cybersecurity 2023 - Present, Saint-Hyacinthe\nExceptional academic performance with an overall average of 85% Champlain College Saint-Lambert | Computer Science Technology 2022 - 2023, Saint-Lambert\nCollège Notre-Dame-de-Lourdes | IB Enriched High School Diploma 2017 - 2022, Saint-Lambert\nSpecialization in sciences with focus on chemistry, physics, and advanced mathematics ","date":"2025-01-06T00:00:00Z","permalink":"https://blog.whitecat.dev/p/cv/","title":"Resume/CV"},{"content":"My future I hope to further enhance my cybersec skills, especially at the university I will be attending, in which I aspire to become the best hacking version of myself. I will pursue my self-taught adventures and projects before I attend this university, just like the fully local and containerised ai i have been working on. Here is a link to the project: (use the showcase user with the showcase password) WhiteCat\u0026rsquo;s Local AI My next certification in my sights is the OSCP (aka PEN-200) from OffSec. This certification, although seen as a less complete version of CPTS, is the most recognizable and known pentesting certification on the market. I will continue to attend the CTFs in my area and hope to get the highest score I can achieve.\nNow, enough talked about myself, lets get to tutorials and knowledge on hacking all kinds of stuff!\n","date":"2025-02-07T00:00:00Z","permalink":"https://blog.whitecat.dev/p/future/","title":"My Future"},{"content":"This is for education purposes only, use at your own riskThis is for education purposes only, use at your own risk\nThis guide will speak about how to bypass almost all firewalls with a stable ssh tunnel (with optional domain name and pub-key authentication) This guide will speak about how to bypass almost all firewalls with a stable ssh tunnel (with optional domain name and pub-key authentication) For this to work you will need:\nA remote ssh server (can be linux, windows, android, whatever, as long as you have a ssh server that is connected to another network than the target) I STRONGLY RECOMMEND USING A VM Port forwarding / access to the router\u0026rsquo;s configuration page. I RECOMMEND A DMZ A firewalled internet connection. A ssh client installed on your device capable of doing ssh tunneling. Some minimal linux / networking knowledge Common sense Optionally: a domain name First, you need to know the outgoing port and protocol allowed by your target network (in my case it was 22 with the ssh protocol allowed). This will most likely be the hardest and most complicated part to do beforehand. I will not explain how to do this as it is out of scope and not part of this guide. Then, you can do the following on your remote (personal computer / vm / phone) ssh server. I will be using linux as the OS of the server and Debian as the distro.\nFirst, edit the ssh server config permit password authentication (should be activated by default)\nsudo nano /etc/ssh/sshd_config\nAnd then change from\n1 2 3 4 5 #PasswordAuthentication yes to PasswordAuthentication yes ip a\n1 2 3 4 1: wlan0: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc noqueue state UP group default qlen 1000 link/ether [redacted] brd ff:ff:ff:ff:ff:ff permaddr [redacted] inet 192.168.2.63/24 brd 192.168.2.255 scope global dynamic noprefixroute wlan0 valid_lft 1410sec preferred_lft 1410sec In my case, my internal (private) ip is 192.168.2.63\nNext, it to setup a port forward on your external ip to your ssh server using the outgoing port as your external internet-facing port and 22 as your internal port pointing to your server\u0026rsquo;s internal ip.\nOn opnsense, it should look like this: sudo systemctl enable --now sshd.service\nAnd curl your external ip, if ever you forgot it.\ncurl ifconfig.me\n[example_ip]\nAnd, you\u0026rsquo;re done! Just for the server\u0026rsquo;s side however.\nInstall \u0026ldquo;sshuttle\u0026rdquo; on your client.\nsudo apt install sshuttle\nOn the client, now simply connect in this fashion:\n(Replace example_ip by your external ip)\nsudo sshuttle --dns -vr [your_user_name]@[example_ip]:22 0/0 -x [example_ip]\nLogin using your username and password as you normally would on your server.\nAnd there you have it, a ssh tunnel from your target\u0026rsquo;s network to your remote server, essentially bypassing every restriction/firewall they would have in place.\n(OPTIONAL) More advanced configuration with a domain name and pub-key authentication. First, setup a \u0026ldquo;A\u0026rdquo; dns record using your provider of choice pointing to your public ip.\nI will be using ssh.example.com as the domain name\nsudo sshuttle --dns -vr [your_user_name]@ssh.example.com:22 0/0 -x ssh.example.com\nQuite simple but effective, in case you cant remember your ip.\nBut in this case you would be exposing a ssh server to the internet using a domain name, making it even simpler for attackers to use a zero-day exploit on your vm/machine. This is why i recommend setting up a DMZ and a vm/docker container to make it contained and seperate from your home network in case of infiltration by an adversary.\nNext, we will be using pub-key authentication to login into our ssh server from now on.\nFrom your client, do\nssh-copy-id [your_user_name]@[example_ip] or (ssh.example.com)\nAnd from now on, you will not need to use a ssh password. Just dont loose your private key, or misplace it as anyone with this private key can now access your server.\nTo conterviene this, use a password protected ssh private key.\n1 2 3 4 5 6 7 ssh-keygen Generating public/private ed25519 key pair. Enter file in which to save the key (/home/[your_user_name]/.ssh/id_ed25519): Enter passphrase for \u0026#34;/home/[your_user_name]/.ssh/id_ed25519\u0026#34; (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/[your_user_name]/.ssh/id_ed25519 Your public key has been saved in /home/[your_user_name]/.ssh/id_ed25519.pub Now use the following command to connect:\n1 sudo sshuttle --dns -vr [your_user_name]@ssh.example.com:22 0/0 -x ssh.example.com --ssh-cmd \u0026#39;ssh -i /home/[your_user_name]/.ssh/id_ed25519\u0026#39; ","date":"2025-01-22T00:00:00Z","permalink":"https://blog.whitecat.dev/p/firewall-bypass/","title":"Firewall Bypass"},{"content":"My past I have always been a geek in terms of computers and IT. When it came to making Minecraft servers at the age of 11 years old or just goofing around in Kali Linux when I was young, having no idea what I was doing, I started my interest in computers at a young age. At the age of 14, I started playing around with servers and virtualization - I notably built my own homelab based (at the time) on UnRaid.\nI next went on my Nova PC endeavor at the age of 15 years old. This company first started out as a \u0026ldquo;Custom PC Building\u0026rdquo; service where you could choose every part of your PC online and we would build it for you. This website was mainly built on WordPress and would later on be switched over to a native and static Next.js website for speed and optimization.\nSee more: Nova PC\nWe started out, as a team of three, the PlayStranded Modded Rust Server. This custom but mostly QoL improvements on the base game of Rust offered multiple game servers, all hosted in my basement. After which we had to shut down the server due to lack of time spent for advertising and other concerns such as school. After the shutdown of PlayStranded, we switched back to reviving the Nova PC business image. This implied a complete makeover, such as switching to web hosting and game hosting.\nLater came the time to choose which of my CEGEP studies I would be undertaking - cybersec and networking was an obvious choice. In the meantime, I completed the CPTS certification from HackTheBox, which was an incredible and enriching experience. I now no longer operate any companies but do some work on the side other than the technical support team at school.\n","date":"2025-01-18T00:00:00Z","permalink":"https://blog.whitecat.dev/p/past/","title":"My Past Experiences"},{"content":"Nova PC What was Nova PC? Nova PC first started out as a small 3-man business focusing mainly on custom PC building services and put a name on my own \u0026ldquo;on the side\u0026rdquo; technical support business. Our custom PC business mainly was a website where people could write us an email (to have a more detailed explanation of their build) or use the built-in Custom Computer Configurator based on WordPress (it was at the time the most cost-efficient and rapid option) that I myself set up entirely. I also had a Facebook profile where people could contact me directly to have their tech issues fixed up by me in a matter of hours. I offered an at-home technical support service, which at the time was undercutting the other companies by a MILE in terms of cost for the client. After this phase of Nova PC came the game server hosting endeavors. PlayStranded.net I had a Dell PowerEdge R620 which I used, at the time, as a personal homelab. Then came the idea to reuse the same infrastructure to make a profit out of it. This server had enough resources to run 3-4 servers of the game named Rust (at full capacity). I would name this branch of Nova PC \u0026ldquo;PlayStranded.net\u0026rdquo;. This custom-made game server was based on LinuxGSM for simplicity and ease of use with the capabilities I had at the time. These servers had plugins and mods made to enhance the Quality of Life of the players overall while playing in these servers. It took us about a week to set up everything.\nGame Hosting Then came the time to change up the Nova PC sector of activities again. I changed from a Dell PowerEdge R620 to a newer and better Cisco UCS M4. The game plan was to use this new server to offer a Game Server Hosting service for games such as Minecraft and similar titles. It was mostly built off of Blesta (and Stripe) for billing and user management and Pterodactyl for the actual Hosting Service. This enhanced my knowledge of Docker and led me to put everything I had in Docker containers, further enhancing my understanding of real-world technologies and virtualization techniques used in companies.\nThe Closure of Nova PC entirely. For now, Nova PC is closed indefinitely. I am currently pursuing my studies to achieve a Baccalaureate in Computer Science with the Cybersecurity specialization, and thus most of my focus is on that.\n","date":"2025-01-06T00:00:00Z","permalink":"https://blog.whitecat.dev/p/nova-pc/","title":"Nova PC"}]